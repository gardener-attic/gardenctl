// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardenctl/pkg/cmd (interfaces: KubeconfigWriter)

// Package cmd is a generated GoMock package.
package cmd

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKubeconfigWriter is a mock of KubeconfigWriter interface
type MockKubeconfigWriter struct {
	ctrl     *gomock.Controller
	recorder *MockKubeconfigWriterMockRecorder
}

// MockKubeconfigWriterMockRecorder is the mock recorder for MockKubeconfigWriter
type MockKubeconfigWriterMockRecorder struct {
	mock *MockKubeconfigWriter
}

// NewMockKubeconfigWriter creates a new mock instance
func NewMockKubeconfigWriter(ctrl *gomock.Controller) *MockKubeconfigWriter {
	mock := &MockKubeconfigWriter{ctrl: ctrl}
	mock.recorder = &MockKubeconfigWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKubeconfigWriter) EXPECT() *MockKubeconfigWriterMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockKubeconfigWriter) Write(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockKubeconfigWriterMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockKubeconfigWriter)(nil).Write), arg0, arg1)
}
