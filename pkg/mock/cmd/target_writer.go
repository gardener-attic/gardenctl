// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardenctl/cmd (interfaces: TargetWriter)

// Package cmd is a generated GoMock package.
package cmd

import (
	cmd "github.com/gardener/gardenctl/cmd"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTargetWriter is a mock of TargetWriter interface
type MockTargetWriter struct {
	ctrl     *gomock.Controller
	recorder *MockTargetWriterMockRecorder
}

// MockTargetWriterMockRecorder is the mock recorder for MockTargetWriter
type MockTargetWriterMockRecorder struct {
	mock *MockTargetWriter
}

// NewMockTargetWriter creates a new mock instance
func NewMockTargetWriter(ctrl *gomock.Controller) *MockTargetWriter {
	mock := &MockTargetWriter{ctrl: ctrl}
	mock.recorder = &MockTargetWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTargetWriter) EXPECT() *MockTargetWriterMockRecorder {
	return m.recorder
}

// WriteTarget mocks base method
func (m *MockTargetWriter) WriteTarget(arg0 string, arg1 cmd.TargetInterface) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteTarget", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteTarget indicates an expected call of WriteTarget
func (mr *MockTargetWriterMockRecorder) WriteTarget(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteTarget", reflect.TypeOf((*MockTargetWriter)(nil).WriteTarget), arg0, arg1)
}
