// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardenctl/pkg/cmd (interfaces: KubeconfigReader)

// Package cmd is a generated GoMock package.
package cmd

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKubeconfigReader is a mock of KubeconfigReader interface
type MockKubeconfigReader struct {
	ctrl     *gomock.Controller
	recorder *MockKubeconfigReaderMockRecorder
}

// MockKubeconfigReaderMockRecorder is the mock recorder for MockKubeconfigReader
type MockKubeconfigReaderMockRecorder struct {
	mock *MockKubeconfigReader
}

// NewMockKubeconfigReader creates a new mock instance
func NewMockKubeconfigReader(ctrl *gomock.Controller) *MockKubeconfigReader {
	mock := &MockKubeconfigReader{ctrl: ctrl}
	mock.recorder = &MockKubeconfigReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKubeconfigReader) EXPECT() *MockKubeconfigReaderMockRecorder {
	return m.recorder
}

// ReadKubeconfig mocks base method
func (m *MockKubeconfigReader) ReadKubeconfig(arg0 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadKubeconfig", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadKubeconfig indicates an expected call of ReadKubeconfig
func (mr *MockKubeconfigReaderMockRecorder) ReadKubeconfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadKubeconfig", reflect.TypeOf((*MockKubeconfigReader)(nil).ReadKubeconfig), arg0)
}
