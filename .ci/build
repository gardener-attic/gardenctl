#!/usr/bin/env bash

set -e

# For the build step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.
# BINARY_PATH - path to an existing (empty) directory to place build results into.

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(readlink -f $(dirname ${0})/..)"
else
  export SOURCE_PATH="$(readlink -f "${SOURCE_PATH}")"
fi

if [[ -z "${BINARY_PATH}" ]]; then
  export BINARY_PATH="${SOURCE_PATH}/bin"
else
  export BINARY_PATH="$(readlink -f "${BINARY_PATH}")/bin"
fi

# The `go <cmd>` commands requires to see the target repository to be part of a
# Go workspace. Thus, if we are not yet in a Go workspace, let's create one
# temporarily by using symbolic links.
if [[ "${SOURCE_PATH}" != *"src/github.com/gardener/gardenctl" ]]; then
  SOURCE_SYMLINK_PATH="${SOURCE_PATH}/tmp/src/github.com/gardener/gardenctl"
  if [[ -d "${SOURCE_PATH}/tmp" ]]; then
    rm -rf "${SOURCE_PATH}/tmp"
  fi
  mkdir -p "${SOURCE_PATH}/tmp/src/github.com/gardener"
  ln -s "${SOURCE_PATH}" "${SOURCE_SYMLINK_PATH}"
  cd "${SOURCE_SYMLINK_PATH}"

  export GOPATH="${SOURCE_PATH}/tmp"
  export GOBIN="${SOURCE_PATH}/tmp/bin"
  export PATH="${GOBIN}:${PATH}"
fi

DATE=$(date -u  +%Y-%m-%d)
VERSION=$(cat $SOURCE_PATH/VERSION)

###############################################################################

go build \
  -ldflags "-w -X github.com/gardener/gardenctl/cmd.version=${VERSION} -w -X github.com/gardener/gardenctl/cmd.buildDate=${DATE}"\
  -o ${BINARY_PATH}/rel/gardenctl gardenctl.go
