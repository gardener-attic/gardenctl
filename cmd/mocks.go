// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardenctl/cmd (interfaces: TargetProviderAPI)

// Package cmd is a generated GoMock package.
package cmd

import (
	gomock "github.com/golang/mock/gomock"
	kubernetes "k8s.io/client-go/kubernetes"
	reflect "reflect"
)

// MockTargetProviderAPI is a mock of TargetProviderAPI interface
type MockTargetProviderAPI struct {
	ctrl     *gomock.Controller
	recorder *MockTargetProviderAPIMockRecorder
}

// MockTargetProviderAPIMockRecorder is the mock recorder for MockTargetProviderAPI
type MockTargetProviderAPIMockRecorder struct {
	mock *MockTargetProviderAPI
}

// NewMockTargetProviderAPI creates a new mock instance
func NewMockTargetProviderAPI(ctrl *gomock.Controller) *MockTargetProviderAPI {
	mock := &MockTargetProviderAPI{ctrl: ctrl}
	mock.recorder = &MockTargetProviderAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTargetProviderAPI) EXPECT() *MockTargetProviderAPIMockRecorder {
	return m.recorder
}

// ClientToTarget mocks base method
func (m *MockTargetProviderAPI) ClientToTarget(arg0 string) (kubernetes.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClientToTarget", arg0)
	ret0, _ := ret[0].(kubernetes.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClientToTarget indicates an expected call of ClientToTarget
func (mr *MockTargetProviderAPIMockRecorder) ClientToTarget(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClientToTarget", reflect.TypeOf((*MockTargetProviderAPI)(nil).ClientToTarget), arg0)
}

// FetchTargetKind mocks base method
func (m *MockTargetProviderAPI) FetchTargetKind() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchTargetKind")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchTargetKind indicates an expected call of FetchTargetKind
func (mr *MockTargetProviderAPIMockRecorder) FetchTargetKind() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchTargetKind", reflect.TypeOf((*MockTargetProviderAPI)(nil).FetchTargetKind))
}
