{{- define "gardener.secret-internal-domain" -}}
{{- if .Values.global.controller.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: internal-domain-{{ ( required ".controller.internalDomain.domain is required" (replace "." "-" .Values.global.controller.internalDomain.domain) ) }}
  namespace: garden
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    garden.sapcloud.io/role: internal-domain
  annotations:
    dns.garden.sapcloud.io/provider: {{ ( required ".controller.internalDomain.provider is required" .Values.global.controller.internalDomain.provider ) }}
    dns.garden.sapcloud.io/domain: {{ ( required ".controller.internalDomain.domain is required" .Values.global.controller.internalDomain.domain ) }}
    {{- if ne .Values.global.controller.internalDomain.provider "alicloud-dns" }}
    dns.garden.sapcloud.io/hostedZoneID: {{ ( required ".controller.internalDomain.hostedZoneID is required" .Values.global.controller.internalDomain.hostedZoneID ) }}
    {{- end }}
type: Opaque
data:
{{- if eq .Values.global.controller.internalDomain.provider "aws-route53" }}
  accessKeyID: {{ ( required ".controller.internalDomain.credentials.accessKeyID is required" .Values.global.controller.internalDomain.credentials.accessKeyID ) | b64enc }}
  secretAccessKey: {{ ( required ".controller.internalDomain.credentials.secretAccessKey is required" .Values.global.controller.internalDomain.credentials.secretAccessKey ) | b64enc }}
{{- else if eq .Values.global.controller.internalDomain.provider "alicloud-dns" }}
  accessKeyID: {{ ( required ".controller.internalDomain.credentials.accessKeyID is required" .Values.global.controller.internalDomain.credentials.accessKeyID ) | b64enc }}
  accessKeySecret: {{ ( required ".controller.internalDomain.credentials.accessKeySecret is required" .Values.global.controller.internalDomain.credentials.accessKeySecret ) | b64enc }}
{{- else if eq .Values.global.controller.internalDomain.provider "openstack-designate" }}
  authURL: {{ ( required ".controller.internalDomain.credentials.authURL is required" .Values.global.controller.internalDomain.credentials.authURL) | b64enc }}
  domainName: {{ ( required ".controller.internalDomain.credentials.domainName is required" .Values.global.controller.internalDomain.credentials.domainName) | b64enc }}
  tenantName: {{ ( required ".controller.internalDomain.credentials.tenantName is required" .Values.global.controller.internalDomain.credentials.tenantName) | b64enc }}
  username: {{ ( required ".controller.internalDomain.credentials.username is required" .Values.global.controller.internalDomain.credentials.username) | b64enc }}
  userDomainName: {{ ( required ".controller.internalDomain.credentials.userDomainName is required" .Values.global.controller.internalDomain.credentials.userDomainName) | b64enc }}
  password: {{ ( required ".controller.internalDomain.credentials.password is required" .Values.global.controller.internalDomain.credentials.password) | b64enc }}
{{- else if eq .Values.global.controller.internalDomain.provider "google-clouddns" }}
  serviceaccount.json: {{ ( required ".controller.defaultDomains[].credentials['serviceaccount.json'] is required" (index .Values.global.controller.internalDomain.credentials "serviceaccount.json") ) | b64enc }}
{{- end }}
{{- end }}
{{- end -}}
