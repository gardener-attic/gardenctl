apiVersion: v1
kind: ConfigMap
metadata:
  name: es-configmap
  namespace: {{ .Release.Namespace }}
  labels:
    app: elasticsearch-logging
    role: logging
data:
  elasticsearch.yml: |-
    node:
      master: ${NODE_MASTER:true}
      name: ${NODE_NAME:${HOSTNAME}}
      data: ${NODE_DATA:true}
      ingest: ${NODE_INGEST:true}
      max_local_storage_nodes: ${MAX_LOCAL_STORAGE_NODES:1}

    processors: ${PROCESSORS}

    network:
      host: ${NETWORK_HOST:0.0.0.0}

    path:
      data: ${PATH_DATA:/data}
      logs: ${PATH_DATA:/data}/log

    http:
      port: ${HTTP_PORT:9200}
      compression: true
      cors:
        enabled: ${HTTP_CORS_ENABLE:false}
        allow-origin: ${HTTP_CORS_ALLOW_ORIGIN:*}

    discovery:
      zen:
        ping.unicast.hosts: ${DISCOVERY_SERVICE:elasticsearch-logging}
        minimum_master_nodes: ${NUMBER_OF_MASTERS:1}

    transport:
      tcp:
        port: ${TRANSPORT_PORT:9300}

    indices:
      memory:
        index_buffer_size: ${INDEX_BUFFER_SIZE:10%}

    thread_pool:
      write:
        queue_size: ${WRITE_QUEUE_SIZE:200}

    cluster:
      name: ${CLUSTER_NAME:kubernetes-logging}
      routing:
        allocation:
          disk:
            # disable disk allocation
            threshold_enabled: ${ALLOW_DISK_ALLOCATION:true}
            watermark:
              # this is the threshold to move shard to other node
              # (which we don't have in single node mode so put it to 100%)
              high : ${DISK_WATERMARK_HIGHT:90%}
              #The low watermark defines the disk usage point beyond which ES 
              # wonâ€™t allocate new shards to that node.
              low: ${DISK_WATERMARK_LOW:85%}
              #threshold for read only lock
              flood_stage: ${DISK_WATERMARK_FLOOD_STAGE:95%}
          # for single node only allow only primary shard. We don't need replica
          enable: ${SHARD_REBALANCING_FOR:all}
  log4j2.properties: |-
    status = error

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
    rootLogger.action = debug
    rootLogger.com.amazonaws = warn
  jvm.options: |-
    ## JVM configuration

    ################################################################
    ## IMPORTANT: JVM heap size
    ################################################################
    ##
    ## You should always set the min and max JVM heap
    ## size to the same value. For example, to set
    ## the heap to 4 GB, set:
    ##
    ## -Xms4g
    ## -Xmx4g
    ##
    ## See https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html
    ## for more information
    ##
    ################################################################

    # Xms represents the initial size of total heap space
    # Xmx represents the maximum size of total heap space

    -Xms1280M
    -Xmx1280M

    ################################################################
    ## Expert settings
    ################################################################
    ##
    ## All settings below this section are considered
    ## expert settings. Don't tamper with them unless
    ## you understand what you are doing
    ##
    ################################################################

    ## GC configuration
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly

    ## optimizations

    # disable calls to System#gc
    -XX:+DisableExplicitGC

    # pre-touch memory pages used by the JVM during initialization
    -XX:+AlwaysPreTouch

    ## basic

    # force the server VM (remove on 32-bit client JVMs)
    -server

    # explicitly set the stack size (reduce to 320k on 32-bit client JVMs)
    -Xss1m

    # set to headless, just in case
    -Djava.awt.headless=true

    # ensure UTF-8 encoding by default (e.g. filenames)
    -Dfile.encoding=UTF-8

    # use our provided JNA always versus the system one
    -Djna.nosys=true

    # use old-style file permissions on JDK9
    -Djdk.io.permissionsUseCanonicalPath=true

    # flags to configure Netty
    -Dio.netty.noUnsafe=true
    -Dio.netty.noKeySetOptimization=true
    -Dio.netty.recycler.maxCapacityPerThread=0

    # log4j 2
    -Dlog4j.shutdownHookEnabled=false
    -Dlog4j2.disable.jmx=true
    -Dlog4j.skipJansi=true

    ## heap dumps

    # generate a heap dump when an allocation from the Java heap fails
    # heap dumps are created in the working directory of the JVM
    -XX:+HeapDumpOnOutOfMemoryError

    # specify an alternative path for heap dumps
    # ensure the directory exists and has sufficient space
    #-XX:HeapDumpPath=${heap.dump.path}

    ## GC logging

    #-XX:+PrintGCDetails
    #-XX:+PrintGCTimeStamps
    #-XX:+PrintGCDateStamps
    #-XX:+PrintClassHistogram
    #-XX:+PrintTenuringDistribution
    #-XX:+PrintGCApplicationStoppedTime

    # log GC status to a file with time stamps
    # ensure the directory exists
    #-Xloggc:${loggc}

    # By default, the GC log file will not rotate.
    # By uncommenting the lines below, the GC log file
    # will be rotated every 128MB at most 32 times.
    #-XX:+UseGCLogFileRotation
    #-XX:NumberOfGCLogFiles=32
    #-XX:GCLogFileSize=128M

    # Elasticsearch 5.0.0 will throw an exception on unquoted field names in JSON.
    # If documents were already indexed with unquoted fields in a previous version
    # of Elasticsearch, some operations may throw errors.
    #
    # WARNING: This option will be removed in Elasticsearch 6.0.0 and is provided
    # only for migration purposes.
    #-Delasticsearch.json.allow_unquoted_field_names=true

    -Des.enforce.bootstrap.checks=true

    # Returning default values for missing document values is deprecated. 
    # Set system property '-Des.scripting.exception_for_missing_value=true' 
    # to make behaviour compatible with future major versions.
    -Des.scripting.exception_for_missing_value=true
