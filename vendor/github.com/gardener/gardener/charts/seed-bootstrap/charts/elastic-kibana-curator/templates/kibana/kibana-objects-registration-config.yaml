apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-object-registration
  namespace: {{ .Release.Namespace }}
  labels:
    app: kibana
    role: logging
data:
  register: |-
    #/bin/sh

    KIBANA_HOST=http://127.0.0.1:{{ .Values.kibanaPort }}

    until curl -sS ${KIBANA_HOST}/ > /dev/null; do
      echo "Waiting for Kibana..."
      sleep 2
    done;

    function get_http_status {
      HTTP_RESPONSE="$1"
      echo ${HTTP_RESPONSE} | tr -d '\n' | sed -e 's/.*HTTPSTATUS://'
    }

    function create_index_pattern {
      while true
      do
          # store the whole response with the status at the end
          HTTP_RESPONSE=$(curl --silent \
            -H "Content-Type: application/json" \
            -H "kbn-xsrf: true" \
            --write-out "HTTPSTATUS:%{http_code}" \
            -X POST ${KIBANA_HOST}/api/saved_objects/index-pattern/logstash-*?overwrite=true \
            -d '@/gardener/saved-objects/index-pattern.json')

          HTTP_STATUS=$(get_http_status "${HTTP_RESPONSE}")
          HTTP_BODY=$(echo ${HTTP_RESPONSE} | sed -e 's/HTTPSTATUS\:.*//g')

          echo -e "Response status code: ${HTTP_STATUS}"
          echo -e "Response body: ${HTTP_BODY}"

          if [ ${HTTP_STATUS} -eq 200 ]; then
              echo "Successfully created index pattern logstash-*."

              break
          fi

          echo "Still waiting for Kibana..."
          sleep 2
      done
    }

    function set_index_pattern_as_default {
      # store the whole response with the status at the end
      HTTP_RESPONSE=$(curl --silent \
        -H "Content-Type: application/json" \
        -H "kbn-xsrf: true" \
        --write-out "HTTPSTATUS:%{http_code}" \
        -X POST ${KIBANA_HOST}/api/kibana/settings/defaultIndex \
        -d '{"value": "logstash-*"}')

        HTTP_STATUS=$(get_http_status "${HTTP_RESPONSE}")

        if [ ${HTTP_STATUS} -eq 200 ]; then
          echo "Successfully set logstash-* as default index pattern."
        else
          echo "Setting logstash-* as default index pattern failed with ${HTTP_STATUS}."
        fi
    }

    function create_dashboard {
      HTTP_RESPONSE=$(curl --silent \
         -H "Content-Type: application/json" \
         -H "kbn-xsrf: true" \
         --write-out "HTTPSTATUS:%{http_code}" \
         -X POST ${KIBANA_HOST}/api/kibana/dashboards/import \
         -d '@/gardener/saved-objects/dashboard.json')

         HTTP_STATUS=$(get_http_status "${HTTP_RESPONSE}")

         if [ ${HTTP_STATUS} -eq 200 ]; then
           echo "Successfully created Kibana dashboard"
         else
           echo "Creating Kibana dashboard failed with status ${HTTP_STATUS}."
         fi
    }

    echo "Trying to create the logstash index pattern."
    create_index_pattern

    echo "Trying to set the newly created index pattern as default."
    set_index_pattern_as_default

    echo "Trying to create Kibana dashboard."
    create_dashboard

    echo "Sleeping..."
    # Sleep forever
    while sleep 3600; do :; done
