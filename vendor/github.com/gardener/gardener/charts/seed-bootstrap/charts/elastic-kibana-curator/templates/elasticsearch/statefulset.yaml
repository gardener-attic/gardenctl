apiVersion: {{ include "statefulsetversion" . }}
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: logging
    app: elasticsearch-logging
    role: logging
spec:
  serviceName: elasticsearch-logging
  selector:
    matchLabels:
      app: elasticsearch-logging
      role: logging
  replicas: {{ .Values.elasticsearch.elasticsearchReplicas }}
  template:
    metadata:
      annotations:
        checksum/es-configmap: {{ include (print $.Template.BasePath "/elasticsearch/configmap.yaml") . | sha256sum }}
      labels:
        garden.sapcloud.io/role: logging
        app: elasticsearch-logging
        role: logging
    spec:
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
      - name: sysctl
        image: {{ index .Values.global.images "alpine" }}
        command: ["sh", "-c", "if [ $(sysctl -n vm.max_map_count) -lt 262144 ]; then sysctl -w vm.max_map_count=262144; fi"]
        securityContext:
          privileged: true
      - name: chown
        image: {{ index .Values.global.images "elasticsearch-oss" }}
        command: ["sh", "-c", "chown -R elasticsearch:elasticsearch /data"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
      containers:
      - name: elasticsearch-logging
        image: {{ index .Values.global.images "elasticsearch-oss" }}
        imagePullPolicy: IfNotPresent
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms{{ include "jvm.memory" .Values.elasticsearch }} -Xmx{{ include "jvm.memory" .Values.elasticsearch }}"
        - name: CLUSTER_NAME
          value: {{ .Release.Namespace }}-elasticsearch-logging
        - name: WRITE_QUEUE_SIZE
          value: "500"
        - name: INDEX_BUFFER_SIZE
          value: "512MB"
        - name: ALLOW_DISK_ALLOCATION
          value: "true"
        - name: DISK_WATERMARK_HIGHT
          value: "200MB"
        - name: DISK_WATERMARK_LOW
          value: "500MB"
        - name: DISK_WATERMARK_FLOOD_STAGE
          value: "200MB"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          # need more cpu upon initialization, therefore burstable class
{{- include "util-templates.resource-quantity" .Values.elasticsearch | indent 10 }}
        ports:
        - containerPort: {{ .Values.global.elasticsearchPorts.db }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.global.elasticsearchPorts.transport }}
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: config
          mountPath: /usr/share/elasticsearch/config/log4j2.properties
          subPath: log4j2.properties
        - name: config
          mountPath: /usr/share/elasticsearch/config/jvm.options
          subPath: jvm.options
      volumes:
      - name: config
        configMap:
          name: es-configmap
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-logging
      labels:
        role: logging
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.elasticsearch.elasticsearchVolumeSizeGB }}Gi
