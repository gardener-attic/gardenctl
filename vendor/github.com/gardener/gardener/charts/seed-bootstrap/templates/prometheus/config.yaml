apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Release.Namespace }}
data:
  prometheus.yaml: |

    global:
      evaluation_interval: 30s
      scrape_interval: 30s
    rule_files:
    - /etc/prometheus/rules/*.yml

    scrape_configs:
    - job_name: cadvisor
      honor_labels: false
      scheme: https

      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__meta_kubernetes_node_address_InternalIP]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - target_label: type
        replacement: seed

      # Drop metrics that are useless and high-volume
      # Use topk(20, count by (__name__, job)({__name__=~".+"})) to find offending time-series
      metric_relabel_configs:
      - source_labels: [ __name__ ]
        regex: ^container_({{ .Values.prometheus.cadvisorAllowedMetrics | join "|" }})$
        action: keep
      - source_labels: [ container_name ]
        regex: ^POD$
        action: drop
        # drop terraform pods
      - source_labels: [ pod_name ]
        regex: ^.+\.tf-pod.+$
        action: drop
      - regex: ^id$
        action: labeldrop
