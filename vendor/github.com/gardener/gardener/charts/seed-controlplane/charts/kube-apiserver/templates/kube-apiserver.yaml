apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kube-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: apiserver
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: apiserver
  template:
    metadata:
      annotations:
        checksum/configmap-audit-policy: {{ include (print $.Template.BasePath "/audit-policy.yaml") . | sha256sum }}
        checksum/secret-oidc-cabundle: {{ include (print $.Template.BasePath "/oidc-ca-secret.yaml") . | sha256sum }}
        checksum/configmap-blackbox-exporter: {{ include (print $.Template.BasePath "/blackbox-exporter-config.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: kubernetes
        role: apiserver
    spec:
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-apiserver
        image: {{ index .Values.images "hyperkube" }}:v{{ .Values.kubernetesVersion }}
        imagePullPolicy: IfNotPresent
        command:
        - /hyperkube
        - apiserver
        {{- if semverCompare "< 1.10" .Values.kubernetesVersion }}
        - --admission-control=NamespaceLifecycle,LimitRanger,Initializers,ServiceAccount,NodeRestriction,DefaultStorageClass,PersistentVolumeLabel,DefaultTolerationSeconds,ResourceQuota
        {{- else }}
        - --enable-admission-plugins=Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,DefaultStorageClass,PersistentVolumeLabel,DefaultTolerationSeconds,StorageObjectInUseProtection,{{ if semverCompare ">= 1.9" .Values.kubernetesVersion }}MutatingAdmissionWebhook,{{ end }}ValidatingAdmissionWebhook,ResourceQuota,PodPreset
        {{- end }}
        - --advertise-address={{ .Values.advertiseAddress }}
        - --allow-privileged=true
        - --anonymous-auth=false
        - --apiserver-count={{ .Values.replicas }}
        {{- if semverCompare ">= 1.8" .Values.kubernetesVersion }}
        - --audit-log-path=/var/lib/audit.log
        - --audit-policy-file=/etc/kubernetes/audit/audit-policy.yaml
        - --audit-log-maxsize=100
        - --audit-log-maxbackup=5
        {{- end }}
        - --authorization-mode=Node,RBAC
        - --basic-auth-file=/srv/kubernetes/auth/basic_auth.csv
        - --client-ca-file=/srv/kubernetes/ca/ca.crt
        {{- if semverCompare "< 1.9" .Values.kubernetesVersion }}
        - --cloud-provider={{ .Values.cloudProvider }}
        {{- end }}
        - --cloud-config=/etc/kubernetes/cloudprovider/cloudprovider.conf
        - --enable-aggregator-routing=true
        - --enable-bootstrap-token-auth=true
        - --etcd-servers=http://$(ETCD_MAIN_CLIENT_SERVICE_HOST):$(ETCD_MAIN_CLIENT_SERVICE_PORT)
        - --etcd-servers-overrides=/events#http://$(ETCD_EVENTS_CLIENT_SERVICE_HOST):$(ETCD_EVENTS_CLIENT_SERVICE_PORT)
        {{- include "kube-apiserver.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
        - --kubelet-client-certificate=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.crt
        - --kubelet-client-key=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.key
        - --insecure-port=0
        {{- include "kube-apiserver.oidcConfig" . | indent 8 }}
        - --proxy-client-cert-file=/srv/kubernetes/aggregator/kube-aggregator.crt
        - --proxy-client-key-file=/srv/kubernetes/aggregator/kube-aggregator.key
        - --requestheader-client-ca-file=/srv/kubernetes/ca/ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        {{- include "kube-apiserver.runtimeConfig" . | trimSuffix "," | indent 8 }}
        - --secure-port={{ required ".securePort is required" .Values.securePort }}
        - --service-cluster-ip-range={{ .Values.serviceNetwork }}
        - --service-account-key-file=/srv/kubernetes/service-account-key/id_rsa
        - --tls-cert-file=/srv/kubernetes/apiserver/kube-apiserver.crt
        - --tls-private-key-file=/srv/kubernetes/apiserver/kube-apiserver.key
        - --v=2
{{- range $index, $param := $.Values.additionalParameters }}
        - {{$param}}
{{- end }}
        env:
{{ toYaml .Values.environment | indent 10 }}
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: {{ required ".securePort is required" .Values.securePort }}
            httpHeaders:
            - name: Authorization
              value: Basic {{ .Values.livenessProbeCredentials }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - name: https
          containerPort: 443
          protocol: TCP
        - name: local
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 200m
        volumeMounts:
        {{- if semverCompare ">= 1.8" .Values.kubernetesVersion }}
        - name: audit-policy-config
          mountPath: /etc/kubernetes/audit
        {{- end }}
        - name: ca
          mountPath: /srv/kubernetes/ca
        - name: kube-apiserver
          mountPath: /srv/kubernetes/apiserver
        - name: service-account-key
          mountPath: /srv/kubernetes/service-account-key
        - name: kube-apiserver-basic-auth
          mountPath: /srv/kubernetes/auth
        - name: kube-apiserver-kubelet
          mountPath: /srv/kubernetes/apiserver-kubelet
        - name: kube-aggregator
          mountPath: /srv/kubernetes/aggregator
        {{- if .Values.oidcConfig.caBundle }}
        - name: kube-apiserver-oidc-cabundle
          mountPath: /srv/kubernetes/oidc
        {{- end }}
        - name: cloud-provider-config
          mountPath: /etc/kubernetes/cloudprovider
        - name: cloudprovider
          mountPath: /srv/cloudprovider
        - name: etcssl
          mountPath: /etc/ssl
          readOnly: true
        - name: ssl-certs-hosts
          mountPath: /usr/share/ca-certificates
          readOnly: true
      - name: vpn-seed
        image: {{ index .Values.images "vpn-seed" }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MAIN_VPN_SEED
          value: "true"
        - name: IDENTITY_FILE
          value: /srv/ssh/id_rsa
        - name: USER
          value: root
        - name: SERVICE_NETWORK
          value: {{ .Values.serviceNetwork }}
        - name: POD_NETWORK
          value: {{ .Values.podNetwork }}
        - name: NODE_NETWORK
          value: {{ .Values.nodeNetwork }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - name: vpn-ssh-keypair
          mountPath: /srv/ssh
        - name: kube-apiserver-basic-auth
          mountPath: /srv/auth
      - name: blackbox-exporter
        image: {{ index .Values.images "blackbox-exporter" }}
        args:
        - --config.file=/vpn/blackbox.yaml
        ports:
        # port name must be max 15 characters long
        - name: blackbox-export
          containerPort: 9115
          protocol: TCP
        volumeMounts:
        - name: blackbox-exporter-config
          mountPath: /vpn
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      {{- if semverCompare ">= 1.8" .Values.kubernetesVersion }}
      - name: audit-policy-config
        configMap:
          name: audit-policy-config
      {{- end }}
      - name: ca
        secret:
          secretName: ca
      - name: kube-apiserver
        secret:
          secretName: kube-apiserver
      - name: service-account-key
        secret:
          secretName: service-account-key
      - name: kube-apiserver-basic-auth
        secret:
          secretName: kube-apiserver-basic-auth
      - name: kube-apiserver-kubelet
        secret:
          secretName: kube-apiserver-kubelet
      - name: kube-aggregator
        secret:
          secretName: kube-aggregator
      {{- if .Values.oidcConfig.caBundle }}
      - name: kube-apiserver-oidc-cabundle
        secret:
          secretName: kube-apiserver-oidc-cabundle
      {{- end }}
      - name: vpn-ssh-keypair
        secret:
          secretName: vpn-ssh-keypair
      - name: cloud-provider-config
        configMap:
          name: cloud-provider-config
      - name: cloudprovider
        secret:
          secretName: cloudprovider
      - name: etcssl
        hostPath:
          path: /etc/ssl
      - name: ssl-certs-hosts
        hostPath:
          path: /usr/share/ca-certificates
      - name: blackbox-exporter-config
        configMap:
          name: blackbox-exporter-config
