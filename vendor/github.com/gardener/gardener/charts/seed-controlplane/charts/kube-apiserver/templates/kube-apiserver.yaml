apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kube-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: controlplane
    app: kubernetes
    role: apiserver
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: apiserver
  template:
    metadata:
      annotations:
        checksum/configmap-audit-policy: {{ include (print $.Template.BasePath "/audit-policy.yaml") . | sha256sum }}
        checksum/secret-oidc-cabundle: {{ include (print $.Template.BasePath "/oidc-ca-secret.yaml") . | sha256sum }}
        checksum/configmap-blackbox-exporter: {{ include (print $.Template.BasePath "/blackbox-exporter-config.yaml") . | sha256sum }}
        checksum/configmap-admission-config: {{ include (print $.Template.BasePath "/admission-config.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        app: kubernetes
        role: apiserver
    spec:
      priorityClassName: gardener-shoot-controlplane
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-apiserver
        image: {{ index .Values.images "hyperkube" }}
        imagePullPolicy: IfNotPresent
        command:
        - /hyperkube
        - apiserver
        - --enable-admission-plugins={{ include "kube-apiserver.admissionPlugins" . | trimSuffix "," }}
        - --disable-admission-plugins=PersistentVolumeLabel
        - --admission-control-config-file={{ include "kube-apiserver.admissionPluginConfigFileDir" . }}/admission-configuration.yaml
        {{- if .Values.advertiseAddress }}
        - --advertise-address={{ .Values.advertiseAddress }}
        {{- end }}
        - --allow-privileged=true
        - --anonymous-auth=false
        - --audit-log-path=/var/lib/audit.log
        - --audit-policy-file=/etc/kubernetes/audit/audit-policy.yaml
        - --audit-log-maxsize=100
        - --audit-log-maxbackup=5
        - --authorization-mode=Node,RBAC
        - --basic-auth-file=/srv/kubernetes/auth/basic_auth.csv
        - --client-ca-file=/srv/kubernetes/ca/ca.crt
        - --enable-aggregator-routing=true
        - --enable-bootstrap-token-auth=true
        - --http2-max-streams-per-connection=1000
        {{- if .Values.endpointReconcilerType }}
        - --endpoint-reconciler-type={{ .Values.endpointReconcilerType }}
        {{- end }}
        - --etcd-cafile=/srv/kubernetes/etcd/ca/ca.crt
        - --etcd-certfile=/srv/kubernetes/etcd/client/tls.crt
        - --etcd-keyfile=/srv/kubernetes/etcd/client/tls.key
        - --etcd-servers=https://{{ .Values.etcdMainServiceFqdn }}:{{ .Values.etcdServicePort }}
        - --etcd-servers-overrides=/events#https://{{ .Values.etcdEventsServiceFqdn }}:{{ .Values.etcdServicePort }}
        {{- include "kube-apiserver.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
        - --kubelet-client-certificate=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.crt
        - --kubelet-client-key=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.key
        - --insecure-port=0
        {{- include "kube-apiserver.oidcConfig" . | indent 8 }}
        - --profiling=false
        - --proxy-client-cert-file=/srv/kubernetes/aggregator/kube-aggregator.crt
        - --proxy-client-key-file=/srv/kubernetes/aggregator/kube-aggregator.key
        - --requestheader-client-ca-file=/srv/kubernetes/ca-front-proxy/ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        {{- include "kube-apiserver.runtimeConfig" . | trimSuffix "," | indent 8 }}
        - --secure-port={{ required ".securePort is required" .Values.securePort }}
        - --service-cluster-ip-range={{ .Values.shootNetworks.service }}
        - --service-account-key-file=/srv/kubernetes/service-account-key/id_rsa
        - --tls-cert-file=/srv/kubernetes/apiserver/kube-apiserver.crt
        - --tls-private-key-file=/srv/kubernetes/apiserver/kube-apiserver.key
        - --tls-cipher-suites={{ include "kubernetes.tlsCipherSuites" . | replace "\n" "," | trimPrefix "," }}
        - --v=2
{{- range $index, $param := $.Values.additionalParameters }}
        - {{ $param }}
{{- end }}
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: {{ required ".securePort is required" .Values.securePort }}
            httpHeaders:
            - name: Authorization
              value: Basic {{ .Values.probeCredentials }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: {{ required ".securePort is required" .Values.securePort }}
            httpHeaders:
            - name: Authorization
              value: Basic {{ .Values.probeCredentials }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - name: https
          containerPort: 443
          protocol: TCP
        - name: local
          containerPort: 8080
          protocol: TCP
        {{- if .Values.apiServerResources }}
        resources:
{{ toYaml .Values.apiServerResources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: audit-policy-config
          mountPath: /etc/kubernetes/audit
        - name: ca
          mountPath: /srv/kubernetes/ca
        - name: ca-etcd
          mountPath: /srv/kubernetes/etcd/ca
        - name: ca-front-proxy
          mountPath: /srv/kubernetes/ca-front-proxy
        - name: etcd-client-tls
          mountPath: /srv/kubernetes/etcd/client
        - name: kube-apiserver
          mountPath: /srv/kubernetes/apiserver
        - name: service-account-key
          mountPath: /srv/kubernetes/service-account-key
        - name: kube-apiserver-basic-auth
          mountPath: /srv/kubernetes/auth
        - name: kube-apiserver-kubelet
          mountPath: /srv/kubernetes/apiserver-kubelet
        - name: kube-aggregator
          mountPath: /srv/kubernetes/aggregator
        {{- if .Values.oidcConfig.caBundle }}
        - name: kube-apiserver-oidc-cabundle
          mountPath: /srv/kubernetes/oidc
        {{- end }}
        - name: kube-apiserver-admission-config
          mountPath: {{ include "kube-apiserver.admissionPluginConfigFileDir" . }}
        - name: etcssl
          mountPath: /etc/ssl
          readOnly: true
        - name: ssl-certs-hosts
          mountPath: /usr/share/ca-certificates
          readOnly: true
      - name: vpn-seed
        image: {{ index .Values.images "vpn-seed" }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MAIN_VPN_SEED
          value: "true"
        - name: OPENVPN_PORT
          value: "4314"
        ports:
        - name: https
          containerPort: 1194
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv/secrets/vpn-seed
          name: vpn-seed
        - mountPath: /srv/secrets/tlsauth
          name: vpn-seed-tlsauth
        - mountPath: /srv/auth
          name: kube-apiserver-basic-auth
      - name: blackbox-exporter
        image: {{ index .Values.images "blackbox-exporter" }}
        args:
        - --config.file=/vpn/blackbox.yaml
        ports:
        # port name must be max 15 characters long
        - name: blackbox-export
          containerPort: 9115
          protocol: TCP
        resources:
          requests:
            cpu: 5m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: blackbox-exporter-config-apiserver
          mountPath: /vpn
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: audit-policy-config
        configMap:
          name: audit-policy-config
      - name: ca
        secret:
          secretName: ca
      - name: ca-etcd
        secret:
          secretName: ca-etcd
      - name: ca-front-proxy
        secret:
          secretName: ca-front-proxy
      - name: kube-apiserver
        secret:
          secretName: kube-apiserver
      - name: etcd-client-tls
        secret:
          secretName: etcd-client-tls
      - name: service-account-key
        secret:
          secretName: service-account-key
      - name: kube-apiserver-basic-auth
        secret:
          secretName: kube-apiserver-basic-auth
      - name: kube-apiserver-kubelet
        secret:
          secretName: kube-apiserver-kubelet
      - name: kube-aggregator
        secret:
          secretName: kube-aggregator
      {{- if .Values.oidcConfig.caBundle }}
      - name: kube-apiserver-oidc-cabundle
        secret:
          secretName: kube-apiserver-oidc-cabundle
      {{- end }}
      - name: kube-apiserver-admission-config
        configMap:
          name: kube-apiserver-admission-config
      - name: vpn-seed
        secret:
          secretName: vpn-seed
      - name: vpn-seed-tlsauth
        secret:
          secretName: vpn-seed-tlsauth
      - name: etcssl
        hostPath:
          path: /etc/ssl
      - name: ssl-certs-hosts
        hostPath:
          path: /usr/share/ca-certificates
      - name: blackbox-exporter-config-apiserver
        configMap:
          name: blackbox-exporter-config-apiserver
