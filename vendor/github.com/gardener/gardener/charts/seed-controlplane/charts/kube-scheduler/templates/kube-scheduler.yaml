apiVersion: v1
kind: Service
metadata:
  name: kube-scheduler
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: scheduler
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: metrics
    port: {{ include "kube-scheduler.port" . }}
    protocol: TCP
  selector:
    app: kubernetes
    role: scheduler
---
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kube-scheduler
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: controlplane
    app: kubernetes
    role: scheduler
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: scheduler
  template:
    metadata:
      annotations:
        checksum/configmap-componentconfig: {{ include (print $.Template.BasePath "/componentconfig.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        app: kubernetes
        role: scheduler
    spec:
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-scheduler
        image: {{ index .Values.images "hyperkube" }}
        imagePullPolicy: IfNotPresent
        command:
        - /hyperkube
        - scheduler
        - --config=/var/lib/kube-scheduler-config/config.yaml
        {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
        - --authentication-kubeconfig=/var/lib/kube-scheduler/kubeconfig
        - --authorization-kubeconfig=/var/lib/kube-scheduler/kubeconfig
        - --client-ca-file=/var/lib/kube-scheduler-server/ca.crt
        - --tls-cert-file=/var/lib/kube-scheduler-server/kube-scheduler-server.crt
        - --tls-private-key-file=/var/lib/kube-scheduler-server/kube-scheduler-server.key
        - --secure-port={{ include "kube-scheduler.port" . }}
        - --port=0
        {{- end }}
        {{- include "kube-scheduler.featureGates" . | trimSuffix "," | indent 8 }}
        - --v=2
        livenessProbe:
          httpGet:
            path: /healthz
            {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
            port: {{ include "kube-scheduler.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: kube-scheduler
          mountPath: /var/lib/kube-scheduler
        - name: kube-scheduler-server
          mountPath: /var/lib/kube-scheduler-server
        - name: kube-scheduler-config
          mountPath: /var/lib/kube-scheduler-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kube-scheduler
        secret:
          secretName: kube-scheduler
      - name: kube-scheduler-server
        secret:
          secretName: kube-scheduler-server
      - name: kube-scheduler-config
        configMap:
          name: kube-scheduler-config
