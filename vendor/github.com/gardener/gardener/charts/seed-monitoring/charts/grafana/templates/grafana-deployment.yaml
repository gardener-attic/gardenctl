---
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    component: grafana
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      component: grafana
  template:
    metadata:
      annotations:
        checksum/configmap-dashboards: {{ include (print $.Template.BasePath "/grafana-dashboards-configmap.yaml") . | sha256sum }}
        checksum/configmap-datasources: {{ include (print $.Template.BasePath "/grafana-datasources-configmap.yaml") . | sha256sum }}
        checksum/configmap-dashboard-providers: {{ include (print $.Template.BasePath "/grafana-dashboard-providers-configmap.yaml") . | sha256sum }}
        checksum/secret-auth: {{ include (print $.Template.BasePath "/grafana-secret.yaml") . | sha256sum }}
      labels:
        component: grafana
    spec:
      initContainers:
      - name: init-prometheus
        image: {{ index .Values.images "busybox" }}
        command: ['sh', '-c', 'until wget -T 5 -qO- http://prometheus-web/-/healthy > /dev/null; do echo waiting for Prometheus; sleep 2; done;']
      containers:
      - name: grafana
        image: {{ index .Values.images "grafana" }}
        imagePullPolicy: IfNotPresent
        env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: password
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/grafana-storage
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard-providers
          mountPath: /etc/grafana/provisioning/dashboards
        ports:
        - name: web
          containerPort: 3000
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 200m
            memory: 128Mi
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard-providers
        configMap:
          name: grafana-dashboard-providers
