apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    role: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    role: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/name: prometheus
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: {{ .Values.port }}
  selector:
    app: prometheus
    role: monitoring
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: {{include "statefulsetversion" .}}
kind: StatefulSet
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    role: monitoring
spec:
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: prometheus
      role: monitoring
  serviceName: prometheus
  template:
    metadata:
      annotations:
        checksum/configmap-config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/configmap-rules: {{ include (print $.Template.BasePath "/rules.yaml") . | sha256sum }}
        checksum/configmap-blackbox-exporter: {{ include (print $.Template.BasePath "/blackbox-exporter-config.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: prometheus
        role: monitoring
    spec:
      # used to talk to Seed's API server.
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: {{ index .Values.images "prometheus" }}
        imagePullPolicy: IfNotPresent
        args:
        - --config.file=/etc/prometheus/config/prometheus.yaml
        - --storage.tsdb.path=/var/prometheus/data
        - --storage.tsdb.no-lockfile
        - --storage.tsdb.retention=180h
        - --web.route-prefix=/
        - --web.enable-lifecycle
        - --web.listen-address=0.0.0.0:{{ .Values.port }}
        - --web.external-url=https://{{ .Values.ingress.host }}
        # Since v2.0.0-beta.3 prometheus runs as nobody user (fsGroup 65534/runAsUser 0)
        # data volume needs to be mounted with the same permissions,
        # otherwise we will have Permission denied problems
        securityContext:
          runAsUser: 0
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /-/healthy
            port: {{ .Values.port }}
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/ready
            port: {{ .Values.port }}
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 50m
            memory: 1200Mi
          limits:
            cpu: 200m
            memory: 2400Mi
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
          readOnly: true
        - mountPath: /etc/prometheus/rules
          name: rules
          readOnly: true
        - mountPath: /var/prometheus/data
          name: prometheus-db
          subPath: prometheus-
        # we mount the Shoot cluster's CA and certs
        - mountPath: /etc/prometheus/seed
          name: prometheus-kubeconfig
      - name: prometheus-config-reloader
        image: {{ index .Values.images "configmap-reloader" }}
        imagePullPolicy: IfNotPresent
        args:
        - -webhook-url=http://localhost:9090/-/reload
        - -volume-dir=/etc/prometheus/config
        - -volume-dir=/etc/prometheus/rules
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 10m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
          readOnly: true
        - mountPath: /etc/prometheus/rules
          name: rules
      - name: blackbox-exporter-config-reloader
        image: {{ index .Values.images "configmap-reloader" }}
        imagePullPolicy: IfNotPresent
        args:
        - -webhook-url=http://localhost:9115/-/reload
        - -volume-dir=/vpn
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 10m
            memory: 20Mi
        volumeMounts:
        - mountPath: /vpn
          name: blackbox-exporter-config-prometheus
          readOnly: true
      - image: {{ index .Values.images "vpn-seed" }}
        imagePullPolicy: IfNotPresent
        name: vpn-seed
        env:
        - name: OPENVPN_PORT
          value: "4314"
        ports:
        - name: https
          containerPort: 1194
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv/secrets/vpn-seed
          name: vpn-seed
        - mountPath: /srv/secrets/tlsauth
          name: vpn-seed-tlsauth
        - mountPath: /srv/auth
          name: kube-apiserver-basic-auth
      - name: blackbox-exporter
        image: {{ index .Values.images "blackbox-exporter" }}
        args:
        - --config.file=/vpn/blackbox.yaml
        ports:
        # port name must be max 15 characters long
        - name: blackbox-export
          containerPort: 9115
          protocol: TCP
        resources:
          requests:
            cpu: 5m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: blackbox-exporter-config-prometheus
          mountPath: /vpn
      terminationGracePeriodSeconds: 300
      volumes:
      - name: config
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: rules
        configMap:
          defaultMode: 420
          name: prometheus-rules
      - name: vpn-seed
        secret:
          secretName: vpn-seed
      - name: vpn-seed-tlsauth
        secret:
          secretName: vpn-seed-tlsauth
      - name: shoot-ca
        secret:
          defaultMode: 420
          secretName: ca
      - name: kube-apiserver-basic-auth
        secret:
          secretName: kube-apiserver-basic-auth
      - name: prometheus-kubeconfig
        secret:
          secretName: prometheus
      - name: blackbox-exporter-config-prometheus
        configMap:
          name: blackbox-exporter-config-prometheus
  volumeClaimTemplates:
  - metadata:
      name: prometheus-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
