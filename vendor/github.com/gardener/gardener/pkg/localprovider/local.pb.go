// Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: local.proto

/*
Package localprovider is a generated protocol buffer package.

It is generated from these files:
	local.proto

It has these top-level messages:
	StartRequest
	StartReply
	DeleteRequest
	DeleteReply
*/
package localprovider

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request cloudconfig containing cloud-config data.
type StartRequest struct {
	Cloudconfig string `protobuf:"bytes,1,opt,name=cloudconfig" json:"cloudconfig,omitempty"`
	Id          int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StartRequest) GetCloudconfig() string {
	if m != nil {
		return m.Cloudconfig
	}
	return ""
}

func (m *StartRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The response message containing the message of the creation operation.
type StartReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *StartReply) Reset()                    { *m = StartReply{} }
func (m *StartReply) String() string            { return proto.CompactTextString(m) }
func (*StartReply) ProtoMessage()               {}
func (*StartReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StartReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request containing the id of the machine to delete.
type DeleteRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The response message containing the message of the delete operation.
type DeleteReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteReply) Reset()                    { *m = DeleteReply{} }
func (m *DeleteReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()               {}
func (*DeleteReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*StartRequest)(nil), "localprovider.StartRequest")
	proto.RegisterType((*StartReply)(nil), "localprovider.StartReply")
	proto.RegisterType((*DeleteRequest)(nil), "localprovider.DeleteRequest")
	proto.RegisterType((*DeleteReply)(nil), "localprovider.DeleteReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Local service

type LocalClient interface {
	// Starts a VM
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error)
	// Deletes a VM
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error)
}

type localClient struct {
	cc *grpc.ClientConn
}

func NewLocalClient(cc *grpc.ClientConn) LocalClient {
	return &localClient{cc}
}

func (c *localClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error) {
	out := new(StartReply)
	err := grpc.Invoke(ctx, "/localprovider.Local/Start", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *localClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := grpc.Invoke(ctx, "/localprovider.Local/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Local service

type LocalServer interface {
	// Starts a VM
	Start(context.Context, *StartRequest) (*StartReply, error)
	// Deletes a VM
	Delete(context.Context, *DeleteRequest) (*DeleteReply, error)
}

func RegisterLocalServer(s *grpc.Server, srv LocalServer) {
	s.RegisterService(&_Local_serviceDesc, srv)
}

func _Local_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocalServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/localprovider.Local/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocalServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Local_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocalServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/localprovider.Local/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocalServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Local_serviceDesc = grpc.ServiceDesc{
	ServiceName: "localprovider.Local",
	HandlerType: (*LocalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Local_Start_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Local_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "local.proto",
}

func init() { proto.RegisterFile("local.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0x4e,
	0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x05, 0x73, 0x0a, 0x8a, 0xf2, 0xcb, 0x32,
	0x53, 0x52, 0x8b, 0x94, 0x1c, 0xb8, 0x78, 0x82, 0x4b, 0x12, 0x8b, 0x4a, 0x82, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x14, 0xb8, 0xb8, 0x93, 0x73, 0xf2, 0x4b, 0x53, 0x92, 0xf3, 0xf3, 0xd2,
	0x32, 0xd3, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x85, 0x84, 0xf8, 0xb8, 0x98, 0x32,
	0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x94, 0xd4, 0xb8, 0xb8, 0xa0,
	0x26, 0x14, 0xe4, 0x54, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x42,
	0xf5, 0xc2, 0xb8, 0x4a, 0xf2, 0x5c, 0xbc, 0x2e, 0xa9, 0x39, 0xa9, 0x25, 0xa9, 0x30, 0xab, 0x20,
	0x06, 0x31, 0xc2, 0x0d, 0x52, 0xe7, 0xe2, 0x86, 0x29, 0xc0, 0x6b, 0x92, 0xd1, 0x04, 0x46, 0x2e,
	0x56, 0x1f, 0x90, 0x2f, 0x84, 0x1c, 0xb9, 0x58, 0xc1, 0x76, 0x0b, 0x49, 0xeb, 0xa1, 0x78, 0x4b,
	0x0f, 0xd9, 0x4f, 0x52, 0x92, 0xd8, 0x25, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0x84, 0x5c, 0xb8, 0xd8,
	0x20, 0xb6, 0x0a, 0xc9, 0xa0, 0x29, 0x43, 0x71, 0xad, 0x94, 0x14, 0x0e, 0x59, 0xb0, 0x29, 0x49,
	0x6c, 0xe0, 0xc0, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x24, 0x0f, 0x38, 0xd9, 0x6b, 0x01,
	0x00, 0x00,
}
