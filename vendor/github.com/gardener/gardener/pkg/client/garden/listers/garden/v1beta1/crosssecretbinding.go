// This file was automatically generated by lister-gen

package v1beta1

import (
	v1beta1 "github.com/gardener/gardener/pkg/apis/garden/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CrossSecretBindingLister helps list CrossSecretBindings.
type CrossSecretBindingLister interface {
	// List lists all CrossSecretBindings in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.CrossSecretBinding, err error)
	// CrossSecretBindings returns an object that can list and get CrossSecretBindings.
	CrossSecretBindings(namespace string) CrossSecretBindingNamespaceLister
	CrossSecretBindingListerExpansion
}

// crossSecretBindingLister implements the CrossSecretBindingLister interface.
type crossSecretBindingLister struct {
	indexer cache.Indexer
}

// NewCrossSecretBindingLister returns a new CrossSecretBindingLister.
func NewCrossSecretBindingLister(indexer cache.Indexer) CrossSecretBindingLister {
	return &crossSecretBindingLister{indexer: indexer}
}

// List lists all CrossSecretBindings in the indexer.
func (s *crossSecretBindingLister) List(selector labels.Selector) (ret []*v1beta1.CrossSecretBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.CrossSecretBinding))
	})
	return ret, err
}

// CrossSecretBindings returns an object that can list and get CrossSecretBindings.
func (s *crossSecretBindingLister) CrossSecretBindings(namespace string) CrossSecretBindingNamespaceLister {
	return crossSecretBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CrossSecretBindingNamespaceLister helps list and get CrossSecretBindings.
type CrossSecretBindingNamespaceLister interface {
	// List lists all CrossSecretBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.CrossSecretBinding, err error)
	// Get retrieves the CrossSecretBinding from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.CrossSecretBinding, error)
	CrossSecretBindingNamespaceListerExpansion
}

// crossSecretBindingNamespaceLister implements the CrossSecretBindingNamespaceLister
// interface.
type crossSecretBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CrossSecretBindings in the indexer for a given namespace.
func (s crossSecretBindingNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.CrossSecretBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.CrossSecretBinding))
	})
	return ret, err
}

// Get retrieves the CrossSecretBinding from the indexer for a given namespace and name.
func (s crossSecretBindingNamespaceLister) Get(name string) (*v1beta1.CrossSecretBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("crosssecretbinding"), name)
	}
	return obj.(*v1beta1.CrossSecretBinding), nil
}
